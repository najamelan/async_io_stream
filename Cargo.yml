package:

  # When releasing to crates.io:
  #
  # - last check for all TODO, FIXME, expect, unwrap.
  # - run clippy
  # - Update CHANGELOG.md.
  # - Update version numbers in Cargo.yml, Cargo.toml, install section of readme.
  # - verify CI result
  # - test dependent crates
  # - cargo publish
  # - merge dev branch into master
  # - create git tag
  #
  version       : 0.1.0
  name          : async_io_stream
  authors       : [ Naja Melan <najamelan@autistici.org> ]
  description   : IntoAsyncRead on steriods
  documentation : https://docs.rs/async_io_stream
  repository    : https://github.com/najamelan/async_io_stream
  readme        : README.md
  keywords      : [ futures, io, async, stream, sink, asyncread, asyncwrite, vectored_io ]
  categories    : [ asynchronous, network-programming ]
  license       : Unlicense
  edition       : "2018"
  exclude       : [ benches, examples, tests ]

  metadata:
    docs:
      rs:
        all-features: true
        rustdocflags: [ --cfg, docs ]


features:

  # Implement AsyncRead/AsyncWrite from tokio
  #
  tokio_io  : [ tokio ]

  # Implement Observable if the inner stream implements it and forward calls.
  #
  map_pharos: [ pharos ]


badges:

  maintenance : { status     : actively-developed       }
  travis-ci   : { repository : najamelan/ws_stream_io }


dependencies:

  # Public dependencies (bump major if changing any version number here)
  # Means we use types from these crates in our public API.
  #
  futures-core : ^0.3 # Stream
  futures-io   : ^0.3 # AsyncRead/Write
  futures-sink : ^0.3 # Sink
  futures-task : ^0.3 # noop_waker
  pharos       : { version: ^0.4, optional: true }
  tokio        : { version: ^0.2, optional: true }


  # Private dependencies
  #

dev-dependencies:

  assert_matches   : ^1
  async-std        : { version: ^1, features: [ attributes ] }
  flexi_logger     : ^0.15
  futures          : ^0.3
  futures-test     : ^0.3
  log              : ^0.4
  pretty_assertions: ^0.6
